#include<iostream>
#include<algorithm>
using namespace std;
//최대 허용 중량이 w인 로프는 하나 뿐임
//로프 중량 오름차순 정렬 후 n - i 개씩 병렬로 중첩해서 최대 중량 찾기

//https://manzoo.tistory.com/89 여기에 문제 풀이 상세히 되어있다.
/*
각 로프의 최대 중량이 5 , 8, 13일 떄
1) 5짜리 로프를 선택 최대 15만큼 중량이 걸린다고 하면,
	세 로프로 들수 있는 최대 중량은 5 * 3으로 15이다.
2) 8짜리 로프를 선택, 최대 8만큼 중량이 걸린다고 하면,
	5짜리 로프는 들 수 없다(최대가 5이므로)
	대신 8 과 13짜리 로프에서 각각 8씩 걸리게 되어 최대 중량은 8 * 2 = 16이 된다
3) 13짜리 로프를 선택, 최대 13만큼 중량이 걸린다고 하면, 로프 5와 8은 사용 불가하다
	따라서 13짜리 로프로 들 수 있는 최대 중량은 13 * 1 로 13이다
--> 즉 이 경우 최대 중량은 2개의 로프를 사용한 2번) 일 떄 인 16이다.

1.로프 중량을 오름차순으로 정렬 후
2-1. 3개 로프를 모두 사용하면 5 로프는 5 * 3의 무게 들 수 있다
2-2. 5를 제외한 2개 로프를 사용하면 8로프는 8 * 2 의 무게를 들 수 있다
2-3. 5와 8을 제외한 13로프는 13 * 1의 무게를 들 수 있다.
3. 2-1~2.3의 과정에서의 최대값을 출력한다.

*/
int n, k;
int arr[100001];

int main() {
	ios_base::sync_with_stdio(0), cin.tie(0);
	cin >> n;
	for (int i = 0; i < n; i++) {
		cin >> arr[i];
	}
	sort(arr, arr + n);
	for (int i = 0; i < n; i++) {
		k = max(k, arr[i] * (n - i));
	}
	cout << k;
	return 0;
}